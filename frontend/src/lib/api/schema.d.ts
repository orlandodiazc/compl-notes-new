/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/{username}/notes/{noteId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getNote"];
        put: operations["updateNote"];
        post?: never;
        delete: operations["deleteNote"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/notes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["allNotes"];
        put?: never;
        post: operations["createNote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["listUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-images/{imageId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUserImage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/note-images/{imageId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getNoteImage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        NoteImageRequest: {
            /** Format: uuid */
            id?: string;
            altText?: string;
            /** Format: binary */
            file?: string;
        };
        NoteRequest: {
            title: string;
            content: string;
            images?: components["schemas"]["NoteImageRequest"][];
        };
        Note: {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /** Format: uuid */
            id?: string;
            title: string;
            content: string;
            owner: components["schemas"]["User"];
            images: components["schemas"]["NoteImage"][];
        };
        NoteImage: {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /** Format: uuid */
            id: string;
            altText?: string;
            note: components["schemas"]["Note"];
        };
        User: {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /** Format: uuid */
            id?: string;
            email: string;
            username: string;
            name?: string;
            notes: components["schemas"]["Note"][];
            image?: components["schemas"]["UserImage"];
        };
        UserImage: {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /** Format: uuid */
            id?: string;
            altText?: string;
            contentType: string;
            /** Format: byte */
            blob: string;
            user: components["schemas"]["User"];
        };
        UserFilteredResponse: {
            name?: string;
            /** Format: uuid */
            id: string;
            username: string;
            /** Format: uuid */
            imageId?: string;
        };
        UserImageSummary: {
            /** Format: uuid */
            id: string;
        };
        UserSummaryResponse: {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            name?: string;
            /** Format: uuid */
            id: string;
            username: string;
            image?: components["schemas"]["UserImageSummary"];
        };
        NoteSummary: {
            title: string;
            /** Format: uuid */
            id: string;
        };
        UserNotesResponse: {
            notes: components["schemas"]["NoteSummary"][];
            name?: string;
            /** Format: uuid */
            id: string;
            username: string;
            image?: components["schemas"]["UserImageSummary"];
        };
        NoteSummaryResponse: {
            title: string;
            /** Format: uuid */
            id: string;
            content: string;
            owner: components["schemas"]["OwnerSummary"];
            images: components["schemas"]["NoteImage"][];
            /** Format: date-time */
            updatedAt: string;
        };
        OwnerSummary: {
            /** Format: uuid */
            id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getNote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                noteId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["NoteSummaryResponse"];
                };
            };
        };
    };
    updateNote: {
        parameters: {
            query: {
                newNote: components["schemas"]["NoteRequest"];
            };
            header?: never;
            path: {
                username: string;
                noteId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Note"];
                };
            };
        };
    };
    deleteNote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                username: string;
                noteId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    allNotes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserNotesResponse"];
                };
            };
        };
    };
    createNote: {
        parameters: {
            query: {
                note: components["schemas"]["NoteRequest"];
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Note"];
                };
            };
        };
    };
    listUsers: {
        parameters: {
            query?: {
                filter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserFilteredResponse"][];
                };
            };
        };
    };
    getUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserSummaryResponse"];
                };
            };
        };
    };
    getUserImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                imageId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getNoteImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                imageId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
}
